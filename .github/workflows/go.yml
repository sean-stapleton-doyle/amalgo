name: Go CI & Release Pipeline

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Check formatting
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "Go code is not formatted. Please run 'make fmt' or 'gofmt -w .'"
            gofmt -d .
            exit 1
          fi

      - name: Vet code
        run: make vet

      - name: Run linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.59

      - name: Run tests with coverage
        run: make coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.go-version }}
          path: coverage.out
          
      - name: Build
        run: make build

  release:
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Build release binary
        run: |
          # Create a variable for the output name. Add .exe for Windows.
          OUTPUT_NAME="amalgo-${{ matrix.goos }}-${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            OUTPUT_NAME="${OUTPUT_NAME}.exe"
          fi
          
          # Use the GOOS and GOARCH env vars to cross-compile.
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o "${OUTPUT_NAME}" .
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          generate_release_notes: true
          files: |
            amalgo*

